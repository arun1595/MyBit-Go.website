{"version":3,"file":"bundles/pages/_app.js","sources":["webpack:///webpack/bootstrap a6f4db54237e5d4de1c1","webpack:///pages/_app.js","webpack:///src/actions/index.js","webpack:///src/constants/contracts/API.js","webpack:///src/constants/contracts/AssetCreation.js","webpack:///src/constants/contracts/MyBitToken.js","webpack:///src/constants/index.js","webpack:///src/reducers/assets.js","webpack:///src/reducers/errors.js","webpack:///src/reducers/index.js","webpack:///src/reducers/loading.js","webpack:///src/reducers/misc.js","webpack:///src/reducers/transactions.js","webpack:///src/reducers/user.js","webpack:///src/store/configure-store.js","webpack:///src/util/helpers.js","webpack:///src/util/web3.js","webpack:///external \"connected-next-router\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"next-redux-wrapper\"","webpack:///external \"next/app\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-logger\"","webpack:///external \"redux-thunk\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a6f4db54237e5d4de1c1","import App, { Container } from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper'\nimport { ConnectedRouter } from 'connected-next-router';\nimport { configureStore } from '../src/store/configure-store'\nimport { fetchAssets } from '../src/actions';\n\nclass HomePage extends App {\n  render() {\n    const { Component, pageProps, store } = this.props;\n    store.dispatch(fetchAssets());\n    return (\n      <Container>\n        <Provider store={store}>\n          <ConnectedRouter>\n            <Component { ...pageProps } />\n          </ConnectedRouter>\n        </Provider>\n      </Container>\n    )\n  }\n}\n\nexport default withRedux(configureStore)(HomePage)\n\n\n\n// WEBPACK FOOTER //\n// pages/_app.js","/* eslint-disable no-underscore-dangle */\n// TODO: The previously suppressed error can actually be avoided with better syntax\nimport getWeb3Async from '../util/web3';\nimport * as API from '../constants/contracts/API';\nimport * as AssetCreation from '../constants/contracts/AssetCreation';\nimport * as MyBitToken from '../constants/contracts/MyBitToken';\nimport {\n  MYBIT_TICKER_COINMARKETCAP,\n  ETHEREUM_TICKER_COINMARKETCAP,\n  ETHERSCAN_API_KEY,\n  ETHERSCAN_TX_BY_ADDR_ENDPOINT,\n} from '../constants';\n\nimport { getCategoryFromAssetTypeHash, mergeAllLogsByAssetId } from '../util/helpers';\n\nconst web3 = getWeb3Async();\nconst fetch = require('isomorphic-fetch');\n\n// Action constants\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const FETCH_ASSETS_SUCCESS = 'FETCH_ASSETS_SUCCESS';\nexport const FETCH_ASSETS_FAILURE = 'FETCH_ASSETS_FAILURE';\nexport const FETCH_ASSETS = 'FETCH_ASSETS';\nexport const CHANGE_TRANSACTION_HISTORY_FILTERS = 'CHANGE_TRANSACTION_HISTORY_FILTERS';\nexport const FETCH_MYBIT_PRICE_USD = 'FETCH_MYBIT_PRICE_USD';\nexport const FETCH_MYBIT_PRICE_USD_SUCCESS = 'FETCH_MYBIT_PRICE_USD_SUCCESS';\nexport const FETCH_MYBIT_PRICE_USD_FAILURE = 'FETCH_MYBIT_PRICE_USD_FAILURE';\nexport const FETCH_ETHEREUM_PRICE_USD = 'FETCH_ETHEREUM_PRICE_USD';\nexport const FETCH_ETHEREUM_PRICE_USD_SUCCESS = 'FETCH_ETHEREUM_PRICE_USD_SUCCESS';\nexport const FETCH_ETHEREUM_PRICE_USD_FAILURE = 'FETCH_ETHEREUM_PRICE_USD_FAILURE';\nexport const LOAD_METAMASK_USER_DETAILS = 'LOAD_METAMASK_USER_DETAILS';\nexport const LOAD_METAMASK_USER_DETAILS_SUCCESS = 'LOAD_METAMASK_USER_DETAILS_SUCCESS';\nexport const LOAD_METAMASK_USER_DETAILS_FAILURE = 'LOAD_METAMASK_USER_DETAILS_FAILURE';\nexport const FETCH_TRANSACTION_HISTORY = 'FETCH_TRANSACTION_HISTORY';\nexport const FETCH_TRANSACTION_HISTORY_SUCCESS = 'FETCH_TRANSACTION_HISTORY_SUCCESS';\nexport const FETCH_TRANSACTION_HISTORY_FAILURE = 'FETCH_TRANSACTION_HISTORY_FAILURE';\n\n// Synchronous action creators\nexport const fetchAssetsSuccess = assets => ({ type: FETCH_ASSETS_SUCCESS, payload: { assets } });\nexport const fetchAssetsFailure = error => ({ type: FETCH_ASSETS_FAILURE, payload: { error } });\nexport const fetchMyBitPriceUSDSuccess =\n    price => ({ type: FETCH_MYBIT_PRICE_USD_SUCCESS, payload: { price } });\nexport const fetchMyBitPriceUSDFailure =\n    error => ({ type: FETCH_MYBIT_PRICE_USD_FAILURE, payload: { error } });\nexport const fetchEthereumPriceUSDSuccess =\n    price => ({ type: FETCH_ETHEREUM_PRICE_USD_SUCCESS, payload: { price } });\nexport const fetchEthereumPriceUSDFailure =\n    error => ({ type: FETCH_ETHEREUM_PRICE_USD_FAILURE, payload: { error } });\nexport const clearErrors = () => ({ type: CLEAR_ERRORS });\nexport const setTransactionHistoryFilters = (itemsPerPage, currentPage, sortBy, sortDir) => ({\n  type: CHANGE_TRANSACTION_HISTORY_FILTERS,\n  payload: {\n    itemsPerPage, currentPage, sortBy, sortDir,\n  },\n});\nexport const loadMetamaskUserDetailsSuccess =\n    details => ({ type: LOAD_METAMASK_USER_DETAILS_SUCCESS, payload: { details } });\nexport const loadMetamaskUserDetailsFailure =\n  error => ({ type: LOAD_METAMASK_USER_DETAILS_FAILURE, payload: { error } });\nexport const fetchTransactionHistorySuccess =\n    transactionHistory =>\n      ({ type: FETCH_TRANSACTION_HISTORY_SUCCESS, payload: { transactionHistory } });\nexport const fetchTransactionHistoryFailure =\n    error => ({ type: FETCH_TRANSACTION_HISTORY_FAILURE, payload: { error } });\n\n// Asynchronous action creators\nexport const fetchTransactionHistory = () => async (dispatch, getState) => {\n  dispatch({ type: FETCH_TRANSACTION_HISTORY });\n  try {\n    const userAddress = getState().user.userName;\n\n    /*\n    *  results from etherscan come in lower case\n    *  its cheaper to create a var to hold the address in lower case,\n    *  than it is to keep converting it for every iteration\n    */\n    const userAddressLowerCase = userAddress.toLowerCase();\n    const endpoint = ETHERSCAN_TX_BY_ADDR_ENDPOINT(ETHERSCAN_API_KEY, userAddress);\n    const result = await fetch(endpoint);\n    const jsonResult = await result.json();\n    if (jsonResult.status === '0') {\n      throw new Error(jsonResult.result);\n    }\n\n    const ethTransactionHistory = jsonResult.result\n      .filter(txResult =>\n        txResult.to === userAddressLowerCase || txResult.from === userAddressLowerCase)\n      .map((txResult) => {\n        const multiplier = txResult.from === userAddressLowerCase ? -1 : 1;\n        let status = 'Complete';\n        if(txResult.isError === \"1\"){\n          status = 'Fail';\n        }\n        else if(txResult.confirmations === 0){\n          status = 'Pending';\n        }\n        return {\n          date: txResult.timeStamp * 1000,\n          amount: web3.utils.fromWei(txResult.value, 'ether') * multiplier,\n          status: status,\n          type: 'ETH',\n          txId: txResult.hash,\n        };\n      });\n\n    // Pull MYB transactions from event log\n    const myBitTokenContract = new web3.eth.Contract(MyBitToken.ABI, MyBitToken.ADDRESS);\n    const logTransactions =\n      await myBitTokenContract\n        .getPastEvents('Transfer', { fromBlock: 0, toBlock: 'latest' });\n\n    const mybTransactionHistory = await Promise.all(logTransactions\n      .filter(txResult =>\n        txResult.returnValues.to === userAddress || txResult.returnValues.from === userAddress)\n      .map(async (txResult) => {\n        const blockInfo = await web3.eth.getBlock(txResult.blockNumber);\n        const multiplier = txResult.returnValues.from === userAddress ? -1 : 1;\n        return {\n          amount: (txResult.returnValues.value / 100000000) * multiplier,\n          type: 'MYB',\n          txId: txResult.transactionHash,\n          status: 'Complete',\n          date: blockInfo.timestamp * 1000,\n        };\n      }));\n\n    dispatch(fetchTransactionHistorySuccess(ethTransactionHistory.concat(mybTransactionHistory)));\n  } catch (error) {\n    dispatch(fetchTransactionHistoryFailure(error));\n  }\n};\nexport const loadMetamaskUserDetails = cb => async (dispatch) => {\n  dispatch({ type: LOAD_METAMASK_USER_DETAILS });\n  try {\n    const accounts = await web3.eth.getAccounts();\n    const balance = await web3.eth.getBalance(accounts[0]);\n    const myBitTokenContract = new web3.eth.Contract(MyBitToken.ABI, MyBitToken.ADDRESS);\n    const myBitBalance = await myBitTokenContract.methods.balanceOf(accounts[0]).call() / 100000000;\n    const details = { userName: accounts[0], ethBalance: web3.utils.fromWei(balance, 'ether'), myBitBalance };\n    cb(true);\n    dispatch(loadMetamaskUserDetailsSuccess(details));\n  } catch (error) {\n    cb(false);\n    dispatch(loadMetamaskUserDetailsFailure(error));\n  }\n};\n\nexport const fetchPriceFromCoinmarketcap = ticker => async (dispatch) => {\n  switch (ticker) {\n    case MYBIT_TICKER_COINMARKETCAP:\n      dispatch({ type: FETCH_MYBIT_PRICE_USD });\n      break;\n    case ETHEREUM_TICKER_COINMARKETCAP:\n      dispatch({ type: FETCH_ETHEREUM_PRICE_USD });\n      break;\n    default:\n      throw new Error('Invalid ticker provided to fetchPriceFromCoinmarketcap');\n  }\n  try {\n    const response = await fetch(`https://api.coinmarketcap.com/v2/ticker/${ticker}/`);\n    const jsonResponse = await response.json();\n    const { price } = jsonResponse.data.quotes.USD;\n    switch (ticker) {\n      case MYBIT_TICKER_COINMARKETCAP:\n        dispatch({\n          type: FETCH_MYBIT_PRICE_USD_SUCCESS,\n          payload: { price: Math.round(price * 100) / 100 },\n        });\n        break;\n      case ETHEREUM_TICKER_COINMARKETCAP:\n        dispatch({\n          type: FETCH_ETHEREUM_PRICE_USD_SUCCESS,\n          payload: { price: Math.round(price * 100) / 100 },\n        });\n        break;\n      default:\n        throw new Error('Invalid ticker provided to fetchPriceFromCoinmarketcap');\n    }\n  } catch (error) {\n    switch (ticker) {\n      case MYBIT_TICKER_COINMARKETCAP:\n        dispatch({ type: FETCH_MYBIT_PRICE_USD_FAILURE, payload: { error } });\n        break;\n      case ETHEREUM_TICKER_COINMARKETCAP:\n        dispatch({ type: FETCH_ETHEREUM_PRICE_USD_FAILURE, payload: { error } });\n        break;\n      default:\n        throw new Error('Invalid ticker provided to fetchPriceFromCoinmarketcap');\n    }\n  }\n};\n\nexport const fetchAssets = () => async (dispatch, getState) => {\n  dispatch(clearErrors());\n  dispatch({ type: FETCH_ASSETS });\n  dispatch(fetchPriceFromCoinmarketcap(ETHEREUM_TICKER_COINMARKETCAP));\n  try {\n    const apiContract = new web3.eth.Contract(API.ABI, API.ADDRESS);\n    const assetCreationContract = new web3.eth.Contract(AssetCreation.ABI, AssetCreation.ADDRESS);\n    const logAssetInfoEvents =\n      await assetCreationContract\n        .getPastEvents('LogAssetInfo', { fromBlock: 0, toBlock: 'latest' });\n\n    const logAssetFundingStartedEvents =\n      await assetCreationContract\n        .getPastEvents('LogAssetFundingStarted', { fromBlock: 0, toBlock: 'latest' });\n\n    const logAssetInfo = logAssetInfoEvents\n      .map(({ returnValues }) => returnValues)\n      .map(object => ({\n        assetID: object._assetID,\n        installerID: object._installerID,\n        amountToBeRaised: object._amountToBeRaised,\n      }));\n\n    const logAssetFundingStarted = logAssetFundingStartedEvents\n      .map(({ returnValues }) => returnValues)\n      .map(object => ({\n        assetID: object._assetID,\n        assetType: object._assetType,\n        creator: object._creator,\n      }));\n\n    const combinedLogs =\n      logAssetInfo\n        // .concat(logAssetFundingSuccess)\n        .concat(logAssetFundingStarted)\n        .sort((a, b) => {\n          if (a.assetID < b.assetID) { return -1; }\n          if (a.assetID > b.assetID) { return 1; }\n          return 0;\n        });\n\n    const assets = mergeAllLogsByAssetId(combinedLogs);\n\n    const amountsRaised =\n      await Promise.all(assets.map(async asset =>\n        apiContract.methods.amountRaised(asset.assetID).call()));\n    const fundingDeadlines =\n      await Promise.all(assets.map(async asset =>\n        apiContract.methods.fundingDeadline(asset.assetID).call()));\n    const realAddress = web3.utils.toChecksumAddress(getState().user.userName);\n    const ownershipUnits =\n      await Promise.all(assets.map(async asset => apiContract.methods.ownershipUnits(\n        realAddress,\n        asset.assetID,\n      ).call()));\n    const assetIncomes =\n      await Promise.all(assets.map(async asset => apiContract.methods.totalReceived(asset.assetID)\n        .call()));\n\n    const assetsPlusMoreDetails = assets.map((asset, index) => ({\n      ...asset,\n      amountRaisedInUSD: String(Number(web3.utils.fromWei(amountsRaised[index], 'ether')) * getState().misc.currentEthInUsd),\n      fundingDeadline: fundingDeadlines[index],\n      ownershipUnits: ownershipUnits[index],\n      assetIncome: assetIncomes[index],\n    }));\n\n    const assetsWithCategories = assetsPlusMoreDetails.map((asset) => {\n      if (asset.assetType) {\n        return { ...asset, category: getCategoryFromAssetTypeHash(web3, asset.assetType) };\n      }\n      return { ...asset };\n    });\n    dispatch(fetchAssetsSuccess(assetsWithCategories));\n  } catch (error) {\n    dispatch(fetchAssetsFailure(error));\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/actions/index.js","export const ADDRESS = '0x7c3833e4f308978984D40f7539A36494520D3531';\nexport const ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address',\n      },\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'ownershipUnits',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'amountRaised',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_funder',\n        type: 'address',\n      },\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'totalPaidToFunder',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_name',\n        type: 'string',\n      },\n    ],\n    name: 'contractAddress',\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_operator',\n        type: 'address',\n      },\n    ],\n    name: 'operatorAmountEscrowed',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_functionAuthorizationHash',\n        type: 'bytes32',\n      },\n    ],\n    name: 'isFunctionAuthorized',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'operatorPercentage',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'mybUSDPrice',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_user',\n        type: 'address',\n      },\n    ],\n    name: 'isOwner',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'assetOperator',\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'ethUSDSecondsRemaining',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'lockedForAsset',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_contractAddress',\n        type: 'address',\n      },\n    ],\n    name: 'isPaused',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'totalPaidToFunders',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_operator',\n        type: 'address',\n      },\n    ],\n    name: 'operatorAmountDeposited',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_contractAddress',\n        type: 'address',\n      },\n      {\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        name: '_functionName',\n        type: 'string',\n      },\n      {\n        name: '_agreedParameter',\n        type: 'bytes32',\n      },\n    ],\n    name: 'getFunctionAuthorized',\n    outputs: [\n      {\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'ethUSDPrice',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'database',\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'mybUSDSecondsRemaining',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'MyBitFoundation',\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'fundingDeadline',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_user',\n        type: 'address',\n      },\n    ],\n    name: 'userAccess',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'totalReceived',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'installerPercentage',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'InstallerEscrow',\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'ethUSDPriceExpiration',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'fundingStage',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'deployFinished',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'myBitFoundationPercentage',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'mybUSDPriceExpiration',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n    ],\n    name: 'amountToBeRaised',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: '_database',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'fallback',\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// src/constants/contracts/API.js","export const ADDRESS = '0x5E8E4b6EBeC4aF9CbB69Befab8Aa483C234D6f7d';\nexport const ABI = [\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_myBitFoundationPercentage',\n        type: 'uint256',\n      },\n      {\n        name: '_installerPercentage',\n        type: 'uint256',\n      },\n      {\n        name: '_functionSigner',\n        type: 'address',\n      },\n    ],\n    name: 'changeFundingPercentages',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_functionInitiator',\n        type: 'address',\n      },\n      {\n        name: '_holdingAddress',\n        type: 'address',\n      },\n    ],\n    name: 'destroy',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'database',\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n      {\n        name: '_amountToBeRaised',\n        type: 'uint256',\n      },\n      {\n        name: '_operatorPercentage',\n        type: 'uint256',\n      },\n      {\n        name: '_amountToEscrow',\n        type: 'uint256',\n      },\n      {\n        name: '_installerID',\n        type: 'bytes32',\n      },\n      {\n        name: '_assetType',\n        type: 'bytes32',\n      },\n    ],\n    name: 'newAsset',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_newTimeGivenForFunding',\n        type: 'uint256',\n      },\n    ],\n    name: 'changeFundingTime',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'fundingTime',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_assetID',\n        type: 'bytes32',\n      },\n      {\n        name: '_functionSigner',\n        type: 'address',\n      },\n    ],\n    name: 'removeAsset',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: '_database',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: '_creator',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: '_assetID',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        name: '_assetType',\n        type: 'bytes32',\n      },\n    ],\n    name: 'LogAssetFundingStarted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: '_assetID',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        name: '_installerID',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        name: '_amountToBeRaised',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogAssetInfo',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: '_from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: '_assetID',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        name: '_amountOf',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogLockAssetEscrow',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: '_remover',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: '_assetID',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        name: '_timestamp',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogAssetRemoved',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        name: '_sender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: '_newTimeForFunding',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: '_blockTimestamp',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogFundingTimeChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        name: '_myBitFoundationPercentage',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        name: '_installerPercentage',\n        type: 'uint256',\n      },\n    ],\n    name: 'LogFundingPercentageChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: '_locationSent',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: '_amountSent',\n        type: 'uint256',\n      },\n      {\n        indexed: true,\n        name: '_caller',\n        type: 'address',\n      },\n    ],\n    name: 'LogDestruction',\n    type: 'event',\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// src/constants/contracts/AssetCreation.js","export const ADDRESS = '0x40FfF37c1E5F48CeE320BeD447329A93F6d015C0';\nexport const ABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_spender',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: 'success',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_from',\n        type: 'address',\n      },\n      {\n        name: '_to',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        name: 'success',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'standard',\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'target',\n        type: 'address',\n      },\n      {\n        name: 'mintedAmount',\n        type: 'uint256',\n      },\n    ],\n    name: 'mintToken',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'changeOwner',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_to',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_spender',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n      {\n        name: '_extraData',\n        type: 'bytes',\n      },\n    ],\n    name: 'approveAndCall',\n    outputs: [\n      {\n        name: 'success',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'initialSupply',\n        type: 'uint256',\n      },\n      {\n        name: 'tokenName',\n        type: 'string',\n      },\n      {\n        name: 'decimalUnits',\n        type: 'uint8',\n      },\n      {\n        name: 'tokenSymbol',\n        type: 'string',\n      },\n    ],\n    type: 'constructor',\n  },\n  {\n    payable: false,\n    type: 'fallback',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// src/constants/contracts/MyBitToken.js","/* eslint-disable no-console */\n\nexport const ARTIFICIAL_DELAY_IN_MS = 3000;\nexport const USD_MYB_SYMBOL = 'USD/MYB';\nexport const noop = () => {};\nexport const debug = process.env.NODE_ENV === 'development' ? console.log : noop;\nexport const MYBIT_TICKER_COINMARKETCAP = 1902;\nexport const ETHEREUM_TICKER_COINMARKETCAP = 1027;\n// TODO: Needs to be implemented server-side, API_KEY needs to be created\nexport const ETHERSCAN_API_KEY = '';\nexport const ETHERSCAN_TX_BY_ADDR_ENDPOINT =\n  (apiKey, address) =>\n    `http://api-ropsten.etherscan.io/api?module=account&action=txlist&address=${address}&sort=asc&apikey=${apiKey}`;\nexport const METAMASK_FIREFOX = 'https://addons.mozilla.org/en-US/firefox/addon/ether-metamask/';\nexport const METAMASK_CHROME = 'https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn';\nexport const METAMASK_OPERA = 'http://addons.opera.com/extensions/details/metamask/';\n\n\n\n// WEBPACK FOOTER //\n// src/constants/index.js","import { FETCH_ASSETS_SUCCESS } from '../actions';\n\nconst initialState = [];\n\nconst assets = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ASSETS_SUCCESS:\n      return [...action.payload.assets];\n    default:\n      return state;\n  }\n};\n\nexport default assets;\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/assets.js","import { CLEAR_ERRORS, FETCH_ASSETS_FAILURE } from '../actions';\n\nconst initialState = [];\n\nconst errors = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ASSETS_FAILURE:\n      return [...state, action.payload.error];\n    case CLEAR_ERRORS:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default errors;\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/errors.js","import { combineReducers } from 'redux';\nimport { routerReducer } from 'connected-next-router';\n\n\nimport assets from './assets';\nimport errors from './errors';\nimport loading from './loading';\nimport misc from './misc'; // TODO: Needs to be renamed prices\nimport user from './user';\nimport transactions from './transactions';\n\nconst rootReducer = combineReducers({\n  assets,\n  errors,\n  loading,\n  misc,\n  router: routerReducer,\n  transactions,\n  user,\n});\n\nexport default rootReducer;\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/index.js","import * as Actions from '../actions';\n\nconst initialState = {\n  assets: true,\n  prices: true,\n  transactionHistory: true,\n  user: true,\n};\n\nconst loading = (state = initialState, action) => {\n  switch (action.type) {\n    case Actions.FETCH_ETHEREUM_PRICE_USD:\n    case Actions.FETCH_MYBIT_PRICE_USD:\n      return { ...state, prices: true };\n    case Actions.FETCH_ETHEREUM_PRICE_USD_SUCCESS:\n    case Actions.FETCH_ETHEREUM_PRICE_USD_FAILURE:\n    case Actions.FETCH_MYBIT_PRICE_USD_SUCCESS:\n    case Actions.FETCH_MYBIT_PRICE_USD_FAILURE:\n      return { ...state, prices: false };\n    case Actions.FETCH_ASSETS:\n      return { ...state, assets: true };\n    case Actions.FETCH_ASSETS_SUCCESS:\n    case Actions.FETCH_ASSETS_FAILURE:\n      return { ...state, assets: false };\n    case Actions.LOAD_METAMASK_USER_DETAILS:\n      return { ...state, user: true };\n    case Actions.LOAD_METAMASK_USER_DETAILS_SUCCESS:\n    case Actions.LOAD_METAMASK_USER_DETAILS_FAILURE:\n      return { ...state, user: false };\n    case Actions.FETCH_TRANSACTION_HISTORY:\n      return { ...state, transactionHistory: true };\n    case Actions.FETCH_TRANSACTION_HISTORY_SUCCESS:\n    case Actions.FETCH_TRANSACTION_HISTORY_FAILURE:\n      return { ...state, transactionHistory: false };\n    default:\n      return state;\n  }\n};\n\nexport default loading;\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/loading.js","import { FETCH_MYBIT_PRICE_USD_SUCCESS, FETCH_ETHEREUM_PRICE_USD_SUCCESS } from '../actions';\n\nconst initialState = {};\n\nconst misc = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MYBIT_PRICE_USD_SUCCESS:\n      return { ...state, currentMybitInUsd: action.payload.price };\n    case FETCH_ETHEREUM_PRICE_USD_SUCCESS:\n      return { ...state, currentEthInUsd: action.payload.price };\n    default:\n      return state;\n  }\n};\n\nexport default misc;\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/misc.js","/* eslint-disable max-len */\n// TODO: Remove above when txHistory shape comment removed below\nimport * as Actions from '../actions';\n\nconst initialState = {\n  history: [],\n  currentPage: 0,\n  itemsPerPage: 10,\n  sortBy: 'date',\n  sortDir: 'ASC',\n};\n\nconst transactions = (state = initialState, action) => {\n  switch (action.type) {\n    case Actions.CHANGE_TRANSACTION_HISTORY_FILTERS:\n      return { ...state, ...action.payload };\n    case Actions.FETCH_TRANSACTION_HISTORY_SUCCESS:\n      return {\n        ...state,\n        history: [...action.payload.transactionHistory],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default transactions;\n/*\n[{\n  date: 'January 01, 2018, 19:51', amount: 1.5, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 02, 2018, 19:51', amount: 3, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 03, 2018, 19:51', amount: 47, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: 0.7, status: 'Complete', type: 'MYB', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 01, 2018, 19:51', amount: -37, status: 'Complete', type: 'MYB', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: 1.5, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 04, 2018, 19:51', amount: 1.5, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: -3, status: 'Complete', type: 'MYB', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: 1.8, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'April 05, 2018, 19:51', amount: 1.5, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: 1.5, status: 'Complete', type: 'MYB', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'January 01, 2018, 19:51', amount: -0.4, status: 'Complete', type: 'MYB', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: 22, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: 14, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: -15, status: 'Complete', type: 'MYB', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: 13.22, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}, {\n  date: 'March 05, 2018, 19:51', amount: -17.87, status: 'Complete', type: 'ETH', txId: '0x5eed7527dee715e9c068cda49fee0c1e147845ebad84514ede2dd89919b114b2',\n}];\n*/\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/transactions.js","import * as Actions from '../actions';\n\nconst initialState = {\n  userName: '',\n  ethBalance: '0',\n  myBitBalance: '0',\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case Actions.LOAD_METAMASK_USER_DETAILS_SUCCESS:\n      return {\n        userName: action.payload.details.userName,\n        ethBalance: action.payload.details.ethBalance,\n        myBitBalance: action.payload.details.myBitBalance,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n\n\n\n// WEBPACK FOOTER //\n// src/reducers/user.js","import { applyMiddleware, compose, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { createRouterMiddleware, initialRouterState } from 'connected-next-router'\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport const configureStore = (initialState = {}, { isServer, asPath }) => {\n  const routerMiddleware = createRouterMiddleware();\n      \n  if (isServer) {\n    initialState.router = initialRouterState(asPath)\n  }\n\n  // Redux Configuration\n  const middleware = [];\n  const enhancers = [];\n  \n  middleware.push(ReduxThunk);\n  \n  if (process.env.NODE_ENV !== 'production') {\n    // Logging Middleware\n    const logger = createLogger({\n      level: 'info',\n      collapsed: true,\n    });\n  \n    middleware.push(logger);\n  }\n  \n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers = typeof window !== 'undefined' ? \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose\n    : compose;\n  \n  // Apply Middleware & Compose Enhancers\n  enhancers.push(\n    applyMiddleware(\n      routerMiddleware,\n      ...middleware\n    )\n  );\n  \n  const enhancer = composeEnhancers(...enhancers);\n  \n  return createStore(\n    rootReducer,\n    initialState,\n    enhancer\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// src/store/configure-store.js","import cryptocurrencyAtmCategoryImage from '../images/category-cryptocurrency-atm.png';\nimport solarEnergyCategoryImage from '../images/category-solar-energy.png';\n\nexport const parseEtherFromBalance = (web3, balance) => web3.fromWei(parseInt(balance, 10), 'ether');\n\nexport const mergeAllLogsByAssetId = (logs) => {\n  const assets = [];\n  logs.forEach((logEntry, index, array) => {\n    if (index === 0) {\n      assets.push({ ...logEntry });\n      return;\n    }\n    if (logEntry.assetID === array[index - 1].assetID) {\n      const duplicateIndex = assets.map(asset => asset.assetID).indexOf(logEntry.assetID);\n      if (duplicateIndex > -1) {\n        assets[duplicateIndex] = { ...logEntry, ...array[index - 1], ...assets[duplicateIndex] };\n      } else {\n        assets.push({ ...logEntry, ...array[index - 1] });\n      }\n    } else {\n      assets.push({ ...logEntry });\n    }\n  });\n  return assets;\n};\n\nexport const mergeAndSumFundingEvents = (fundingEvents) => {\n  const assets = [];\n  const fundingEventsWithNumbers = fundingEvents\n    .map(({ assetID, currentEthPrice }) => ({ assetID, currentEthPrice: Number(currentEthPrice) }));\n  fundingEventsWithNumbers.forEach((logEntry, index, array) => {\n    if (index === 0) {\n      assets.push({ ...logEntry });\n      return;\n    }\n    if (logEntry.assetID === array[index - 1].assetID) {\n      const duplicateIndex = assets.map(asset => asset.assetID).indexOf(logEntry.assetID);\n      if (duplicateIndex > -1) {\n        assets[duplicateIndex] = {\n          ...logEntry,\n          ...array[index - 1],\n          ...assets[duplicateIndex],\n          currentEthPrice: assets[duplicateIndex].currentEthPrice + logEntry.currentEthPrice,\n        };\n      } else {\n        assets.push({\n          ...logEntry,\n          ...array[index - 1],\n          currentEthPrice: array[index - 1].currentEthPrice + logEntry.currentEthPrice,\n        });\n      }\n    } else {\n      assets.push({ ...logEntry });\n    }\n  });\n  const totalAmountRaisedAssets =\n    assets.map(({ assetID, currentEthPrice }) =>\n      ({ assetID, totalAmountRaised: String(currentEthPrice) }));\n  return totalAmountRaisedAssets;\n};\n\nexport const getCategoryFromAssetTypeHash = (web3, assetTypeHash) => {\n  switch (assetTypeHash) {\n    case web3.utils.sha3('coffeemachine'):\n      return 'coffeemachine';\n    case web3.utils.sha3('bitcoinatm'):\n      return 'bitcoinatm';\n    default:\n      return 'uncategorized';\n  }\n};\n\nexport const getAssetIDFromHash = (web3, assetIDHash) => {\n  switch (assetIDHash) {\n    case web3.utils.sha3('officecoffeemachine'):\n      return 'officecoffeemachine';\n    default:\n      return '';\n  }\n};\n\nexport const getPrettyCategoryName = (category) => {\n  switch (category) {\n    case 'coffeemachine':\n      return 'Coffee Machines';\n    case 'uncategorized':\n      return 'Uncategorized';\n    default:\n      return 'Unknown';\n  }\n};\n\nexport const getImageForCategory = (category) => {\n  switch (category) {\n    case 'coffeemachine':\n      return cryptocurrencyAtmCategoryImage;\n    case 'uncategorized':\n      return solarEnergyCategoryImage;\n    default:\n      return cryptocurrencyAtmCategoryImage;\n  }\n};\n\n\n\n\n// WEBPACK FOOTER //\n// src/util/helpers.js","import Web3 from 'web3';\nimport { debug } from '../constants';\n\nconst getWeb3Async = () => {\n  if (typeof window === 'undefined') return {}\n  if (window.web3) {\n    // Injected Web3 detected. Use Mist/MetaMask's provider.\n    window.web3 = new Web3(window.web3.currentProvider);\n    debug('Metamask Loaded');\n  } else {\n    // No web3 instance injected, using Local web3.\n    const provider = new Web3.providers.HttpProvider('http://localhost:8545');\n    window.web3 = new Web3(provider);\n  }\n  return window.web3;\n};\n\nexport default getWeb3Async;\n\n\n\n// WEBPACK FOOTER //\n// src/util/web3.js","module.exports = require(\"connected-next-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"connected-next-router\"\n// module id = connected-next-router\n// module chunks = 0","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = isomorphic-fetch\n// module chunks = 0 3","module.exports = require(\"next-redux-wrapper\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next-redux-wrapper\"\n// module id = next-redux-wrapper\n// module chunks = 0","module.exports = require(\"next/app\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/app\"\n// module id = next/app\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 0 3","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = react-redux\n// module chunks = 0 3","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = redux\n// module chunks = 0","module.exports = require(\"redux-logger\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-logger\"\n// module id = redux-logger\n// module chunks = 0","module.exports = require(\"redux-thunk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-thunk\"\n// module id = redux-thunk\n// module chunks = 0","module.exports = require(\"web3\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"web3\"\n// module id = web3\n// module chunks = 0 3"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAdA;AACA;AAeA;;;;;;;;;;;;;;;;;;;;;ACvdA;AAgBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AARA;AAUA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AAGA;AAGA;AACA;AAKA;AAIA;AAEA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7QA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AArBA;AAwBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AArBA;AAwBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AATA;AAYA;AACA;AACA;AAHA;;;;;;;;;;;;ACljBA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAzBA;AA4BA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAhBA;AAmBA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AArCA;AAwCA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAZA;AAeA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AArBA;AAwBA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AATA;AAYA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AApBA;AAuBA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AApBA;AAuBA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AApBA;AAuBA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AApBA;AAuBA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AApBA;AAuBA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAfA;AAkBA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AApBA;;;;;;;;;;;;ACtSA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAXA;AAcA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AApBA;AAuBA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAXA;AAcA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAxBA;AA2BA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAXA;AAcA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAXA;AAcA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAhBA;AAmBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAXA;AAcA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAXA;AAcA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAXA;AAcA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAxBA;AA2BA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AApBA;AAuBA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAnBA;AAsBA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AApBA;;;;;;;;;;;;AC1QA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACfA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;;;;;ACbA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;;;;;;;;;;;;;;;ACrBA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAzBA;AA2BA;AACA;AACA;;;;;;;;;;;;;;;ACvCA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AATA;AAWA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AARA;AAUA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAMA;AAOA;AAEA;AAKA;;;;;;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAIA;AAJA;AAMA;AACA;AAGA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}